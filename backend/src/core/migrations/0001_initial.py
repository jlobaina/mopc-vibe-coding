# Generated by Django 4.2.7 on 2024-01-01 00:00

import uuid
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, verbose_name='Department Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Department Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('workflow_order', models.PositiveIntegerField(verbose_name='Workflow Order')),
                ('can_process_parallel', models.BooleanField(default=False, help_text='Whether this department can process simultaneously with others', verbose_name='Can Process Parallel')),
                ('response_time_hours', models.PositiveIntegerField(default=48, help_text='Standard time limit for this department to respond', verbose_name='Response Time (Hours)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'departamentos',
                'ordering': ['workflow_order'],
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Permission Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('resource', models.CharField(help_text='Resource this permission applies to (e.g., expediente, documento)', max_length=50, verbose_name='Resource')),
                ('action', models.CharField(help_text='Action allowed (e.g., crear, leer, actualizar, eliminar)', max_length=50, verbose_name='Action')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
                'db_table': 'permisos',
                'unique_together': {('resource', 'action')},
            },
        ),
        migrations.CreateModel(
            name='WorkflowState',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='State Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_final', models.BooleanField(default=False, help_text='Whether this is a final state in the workflow', verbose_name='Is Final State')),
                ('color', models.CharField(default='#6B7280', help_text='Hex color code for UI representation', max_length=7, verbose_name='Color')),
                ('order', models.PositiveIntegerField(verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'Workflow State',
                'verbose_name_plural': 'Workflow States',
                'db_table': 'workflow_estados',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='username')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('cedula', models.CharField(help_text='Dominican Republic identification number', max_length=20, unique=True, verbose_name='Cedula')),
                ('role', models.CharField(help_text='User role within the department', max_length=50, verbose_name='Role')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.department', verbose_name='Department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'usuarios',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.permission', verbose_name='Permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Permission',
                'verbose_name_plural': 'User Permissions',
                'db_table': 'usuario_permisos',
                'unique_together': {('user', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('type', models.CharField(choices=[('task_assigned', 'Task Assigned'), ('document_required', 'Document Required'), ('workflow_update', 'Workflow Update'), ('deadline_approaching', 'Deadline Approaching'), ('approval_required', 'Approval Required'), ('system_alert', 'System Alert')], max_length=50, verbose_name='Notification Type')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notificaciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('table_name', models.CharField(max_length=100, verbose_name='Table Name')),
                ('record_id', models.UUIDField(verbose_name='Record ID')),
                ('action_type', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('VIEW', 'View'), ('DOWNLOAD', 'Download'), ('APPROVE', 'Approve'), ('REJECT', 'Reject')], max_length=20, verbose_name='Action Type')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('old_values', models.JSONField(blank=True, null=True, verbose_name='Old Values')),
                ('new_values', models.JSONField(blank=True, null=True, verbose_name='New Values')),
                ('additional_data', models.JSONField(blank=True, null=True, verbose_name='Additional Data')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'db_table': 'auditoria',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterIndexTogether(
            name='auditlog',
            index_together={('table_name', 'record_id')},
        ),
    ]