# Generated by Django 4.2.7 on 2024-01-01 00:00

from django.db import migrations

def create_initial_departments(apps, schema_editor):
    """Create initial departments based on the 16-step expropriation process."""
    Department = apps.get_model('core', 'Department')

    departments = [
        # Step 1: Initial Request and Validation
        {
            'name': 'Departamento de Solicitudes',
            'code': 'DS',
            'description': 'Recibe y valida las solicitudes iniciales de expropiación',
            'workflow_order': 1,
            'can_process_parallel': False,
            'response_time_hours': 24,
        },
        # Step 2: Legal Review
        {
            'name': 'Departamento Jurídico',
            'code': 'DJ',
            'description': 'Revisa la legalidad de la solicitud y documentación inicial',
            'workflow_order': 2,
            'can_process_parallel': False,
            'response_time_hours': 48,
        },
        # Step 3: Technical Evaluation
        {
            'name': 'Departamento Técnico',
            'code': 'DT',
            'description': 'Realiza evaluación técnica del predio y viabilidad',
            'workflow_order': 3,
            'can_process_parallel': False,
            'response_time_hours': 72,
        },
        # Step 4: Property Assessment
        {
            'name': 'Departamento de Avalúos',
            'code': 'DA',
            'description': 'Realiza avalúos técnicos y comerciales del inmueble',
            'workflow_order': 4,
            'can_process_parallel': False,
            'response_time_hours': 96,
        },
        # Step 5: Environmental Impact
        {
            'name': 'Departamento Ambiental',
            'code': 'DAMB',
            'description': 'Evalúa impacto ambiental del proyecto',
            'workflow_order': 5,
            'can_process_parallel': True,
            'response_time_hours': 120,
        },
        # Step 6: Urban Planning
        {
            'name': 'Departamento de Planificación Urbana',
            'code': 'DPU',
            'description': 'Verifica compatibilidad con planificación urbana',
            'workflow_order': 6,
            'can_process_parallel': True,
            'response_time_hours': 72,
        },
        # Step 7: Financial Analysis
        {
            'name': 'Departamento Financiero',
            'code': 'DF',
            'description': 'Analiza viabilidad financiera y presupuesto',
            'workflow_order': 7,
            'can_process_parallel': True,
            'response_time_hours': 48,
        },
        # Step 8: Social Impact
        {
            'name': 'Departamento de Desarrollo Social',
            'code': 'DDS',
            'description': 'Evalúa impacto social en la comunidad afectada',
            'workflow_order': 8,
            'can_process_parallel': True,
            'response_time_hours': 96,
        },
        # Step 9: Public Notification
        {
            'name': 'Departamento de Notificaciones',
            'code': 'DNOT',
            'description': 'Gestiona notificaciones públicas y a afectados',
            'workflow_order': 9,
            'can_process_parallel': False,
            'response_time_hours': 48,
        },
        # Step 10: Administrative Approval
        {
            'name': 'Departamento Administrativo',
            'code': 'DADM',
            'description': 'Aprueba administrativamente el proceso',
            'workflow_order': 10,
            'can_process_parallel': False,
            'response_time_hours': 72,
        },
        # Step 11: Negotiation
        {
            'name': 'Departamento de Negociación',
            'code': 'DNEG',
            'description': 'Gestiona negociaciones con propietarios',
            'workflow_order': 11,
            'can_process_parallel': True,
            'response_time_hours': 168,
        },
        # Step 12: Final Documentation
        {
            'name': 'Departamento de Documentación',
            'code': 'DDOC',
            'description': 'Prepara y gestiona documentación final',
            'workflow_order': 12,
            'can_process_parallel': False,
            'response_time_hours': 48,
        },
        # Step 13: Payment Processing
        {
            'name': 'Departamento de Pagos',
            'code': 'DPAG',
            'description': 'Procesa pagos y compensaciones',
            'workflow_order': 13,
            'can_process_parallel': False,
            'response_time_hours': 72,
        },
        # Step 14: Title Transfer
        {
            'name': 'Departamento de Registro',
            'code': 'DREG',
            'description': 'Gestiona transferencia de títulos y registros',
            'workflow_order': 14,
            'can_process_parallel': False,
            'response_time_hours': 96,
        },
        # Step 15: Quality Control
        {
            'name': 'Departamento de Control de Calidad',
            'code': 'DCAL',
            'description': 'Verifica cumplimiento de todos los requisitos',
            'workflow_order': 15,
            'can_process_parallel': False,
            'response_time_hours': 48,
        },
        # Step 16: Project Closeout
        {
            'name': 'Departamento de Cierre',
            'code': 'DCIE',
            'description': 'Gestiona cierre final del expediente',
            'workflow_order': 16,
            'can_process_parallel': False,
            'response_time_hours': 24,
        },
        # Additional Support Departments
        {
            'name': 'Departamento de TI',
            'code': 'DTI',
            'description': 'Soporte técnico y sistemas',
            'workflow_order': 99,
            'can_process_parallel': True,
            'response_time_hours': 24,
        },
        {
            'name': 'Departamento de Auditoría Interna',
            'code': 'DAUD',
            'description': 'Auditoría y control interno',
            'workflow_order': 98,
            'can_process_parallel': True,
            'response_time_hours': 48,
        },
    ]

    for dept_data in departments:
        Department.objects.create(**dept_data)

def reverse_initial_departments(apps, schema_editor):
    """Reverse the creation of initial departments."""
    Department = apps.get_model('core', 'Department')
    Department.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_initial_departments, reverse_initial_departments),
    ]