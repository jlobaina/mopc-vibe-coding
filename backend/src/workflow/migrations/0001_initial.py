# Generated by Django 4.2.7 on 2024-01-01 00:00

import uuid
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expediente',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('numero_expediente', models.CharField(help_text='Unique identifier for the expediente', max_length=50, unique=True, verbose_name='Número de Expediente')),
                ('estado_actual', models.CharField(choices=[('iniciado', 'Iniciado'), ('en_revision', 'En Revisión'), ('aprobado', 'Aprobado'), ('rechazado', 'Rechazado'), ('completado', 'Completado'), ('en_apelacion', 'En Apelación')], default='iniciado', max_length=50, verbose_name='Estado Actual')),
                ('propietario_nombre', models.CharField(max_length=255, verbose_name='Nombre del Propietario')),
                ('propietario_cedula', models.CharField(max_length=20, verbose_name='Cédula del Propietario')),
                ('ubicacion_direccion', models.TextField(verbose_name='Dirección')),
                ('ubicacion_municipio', models.CharField(max_length=100, verbose_name='Municipio')),
                ('ubicacion_provincia', models.CharField(max_length=100, verbose_name='Provincia')),
                ('area_terreno', models.DecimalField(blank=True, decimal_places=2, help_text='Area of the land in square meters', max_digits=15, null=True, verbose_name='Área del Terreno (m²)')),
                ('area_construccion', models.DecimalField(blank=True, decimal_places=2, help_text='Area of construction in square meters', max_digits=15, null=True, verbose_name='Área de Construcción (m²)')),
                ('valor_tasacion', models.DecimalField(blank=True, decimal_places=2, help_text='Property valuation amount', max_digits=18, null=True, verbose_name='Valor de Tasación')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata in JSON format', verbose_name='Metadata')),
                ('fecha_inicio', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Inicio')),
                ('fecha_completado', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Completado')),
                ('departamento_actual', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expedientes_activos', to='core.department', verbose_name='Departamento Actual')),
                ('estado_workflow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.workflowstate', verbose_name='Estado Workflow')),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expedientes_creados', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Expediente',
                'verbose_name_plural': 'Expedientes',
                'db_table': 'expedientes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkflowTransition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('comentarios', models.TextField(blank=True, help_text='Comments about the transition', verbose_name='Comentarios')),
                ('motivo_rechazo', models.TextField(blank=True, help_text='Reason for rejection if applicable', verbose_name='Motivo de Rechazo')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadata')),
                ('desde_departamento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transiciones_desde', to='core.department', verbose_name='Desde Departamento')),
                ('desde_estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transiciones_desde', to='core.workflowstate', verbose_name='Desde Estado')),
                ('expediente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transiciones', to='workflow.expediente', verbose_name='Expediente')),
                ('hacia_departamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transiciones_hacia', to='core.department', verbose_name='Hacia Departamento')),
                ('hacia_estado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transiciones_hacia', to='core.workflowstate', verbose_name='Hacia Estado')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Workflow Transition',
                'verbose_name_plural': 'Workflow Transitions',
                'db_table': 'workflow_transiciones',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('tipo', models.CharField(choices=[('revision', 'Revisión'), ('aprobacion', 'Aprobación'), ('coordinacion', 'Coordinación'), ('verificacion', 'Verificación'), ('notificacion', 'Notificación'), ('documentacion', 'Documentación')], max_length=50, verbose_name='Tipo de Tarea')),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='media', max_length=20, verbose_name='Prioridad')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_progreso', 'En Progreso'), ('completada', 'Completada'), ('cancelada', 'Cancelada'), ('bloqueada', 'Bloqueada')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('fecha_vencimiento', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Vencimiento')),
                ('fecha_completacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Completación')),
                ('resultado', models.TextField(blank=True, help_text='Result of task completion', verbose_name='Resultado')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tareas', to='core.department', verbose_name='Departamento')),
                ('expediente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tareas', to='workflow.expediente', verbose_name='Expediente')),
                ('usuario_asignado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tareas_asignadas', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Asignado')),
                ('depende_de', models.ManyToManyField(blank=True, help_text='Tasks that must be completed before this one', related_name='dependientes', symmetrical=False, to='workflow.task', verbose_name='Depende de')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'db_table': 'tareas',
                'ordering': ['prioridad', 'fecha_vencimiento', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskDependency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('dependency_type', models.CharField(choices=[('finish_to_start', 'Finish to Start'), ('start_to_start', 'Start to Start')], default='finish_to_start', max_length=50, verbose_name='Dependency Type')),
                ('depends_on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependency_backward', to='workflow.task', verbose_name='Depends On')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependency_forward', to='workflow.task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'Task Dependency',
                'verbose_name_plural': 'Task Dependencies',
                'db_table': 'task_dependencies',
                'unique_together': {('task', 'depends_on')},
            },
        ),
        migrations.AlterIndexTogether(
            name='expediente',
            index_together={('estado_actual',), ('departamento_actual',), ('propietario_cedula',), ('created_at',), ('numero_expediente',)},
        ),
        migrations.AlterIndexTogether(
            name='workflowtransition',
            index_together={('expediente',), ('usuario',), ('created_at',)},
        ),
        migrations.AlterIndexTogether(
            name='task',
            index_together={('expediente',), ('departamento',), ('usuario_asignado',), ('estado',), ('prioridad',), ('fecha_vencimiento',)},
        ),
    ]